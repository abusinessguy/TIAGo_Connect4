;; Auto-generated. Do not edit!


(when (boundp 'action_server::ControlJointsGoal)
  (if (not (find-package "ACTION_SERVER"))
    (make-package "ACTION_SERVER"))
  (shadow 'ControlJointsGoal (find-package "ACTION_SERVER")))
(unless (find-package "ACTION_SERVER::CONTROLJOINTSGOAL")
  (make-package "ACTION_SERVER::CONTROLJOINTSGOAL"))

(in-package "ROS")
;;//! \htmlinclude ControlJointsGoal.msg.html


(defclass action_server::ControlJointsGoal
  :super ros::object
  :slots (_torso_lift _arm_1 _arm_2 _arm_3 _arm_4 _arm_5 _arm_6 _arm_7 _gripper_position ))

(defmethod action_server::ControlJointsGoal
  (:init
   (&key
    ((:torso_lift __torso_lift) 0.0)
    ((:arm_1 __arm_1) 0.0)
    ((:arm_2 __arm_2) 0.0)
    ((:arm_3 __arm_3) 0.0)
    ((:arm_4 __arm_4) 0.0)
    ((:arm_5 __arm_5) 0.0)
    ((:arm_6 __arm_6) 0.0)
    ((:arm_7 __arm_7) 0.0)
    ((:gripper_position __gripper_position) 0.0)
    )
   (send-super :init)
   (setq _torso_lift (float __torso_lift))
   (setq _arm_1 (float __arm_1))
   (setq _arm_2 (float __arm_2))
   (setq _arm_3 (float __arm_3))
   (setq _arm_4 (float __arm_4))
   (setq _arm_5 (float __arm_5))
   (setq _arm_6 (float __arm_6))
   (setq _arm_7 (float __arm_7))
   (setq _gripper_position (float __gripper_position))
   self)
  (:torso_lift
   (&optional __torso_lift)
   (if __torso_lift (setq _torso_lift __torso_lift)) _torso_lift)
  (:arm_1
   (&optional __arm_1)
   (if __arm_1 (setq _arm_1 __arm_1)) _arm_1)
  (:arm_2
   (&optional __arm_2)
   (if __arm_2 (setq _arm_2 __arm_2)) _arm_2)
  (:arm_3
   (&optional __arm_3)
   (if __arm_3 (setq _arm_3 __arm_3)) _arm_3)
  (:arm_4
   (&optional __arm_4)
   (if __arm_4 (setq _arm_4 __arm_4)) _arm_4)
  (:arm_5
   (&optional __arm_5)
   (if __arm_5 (setq _arm_5 __arm_5)) _arm_5)
  (:arm_6
   (&optional __arm_6)
   (if __arm_6 (setq _arm_6 __arm_6)) _arm_6)
  (:arm_7
   (&optional __arm_7)
   (if __arm_7 (setq _arm_7 __arm_7)) _arm_7)
  (:gripper_position
   (&optional __gripper_position)
   (if __gripper_position (setq _gripper_position __gripper_position)) _gripper_position)
  (:serialization-length
   ()
   (+
    ;; float64 _torso_lift
    8
    ;; float64 _arm_1
    8
    ;; float64 _arm_2
    8
    ;; float64 _arm_3
    8
    ;; float64 _arm_4
    8
    ;; float64 _arm_5
    8
    ;; float64 _arm_6
    8
    ;; float64 _arm_7
    8
    ;; float64 _gripper_position
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float64 _torso_lift
       (sys::poke _torso_lift (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _arm_1
       (sys::poke _arm_1 (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _arm_2
       (sys::poke _arm_2 (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _arm_3
       (sys::poke _arm_3 (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _arm_4
       (sys::poke _arm_4 (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _arm_5
       (sys::poke _arm_5 (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _arm_6
       (sys::poke _arm_6 (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _arm_7
       (sys::poke _arm_7 (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _gripper_position
       (sys::poke _gripper_position (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float64 _torso_lift
     (setq _torso_lift (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _arm_1
     (setq _arm_1 (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _arm_2
     (setq _arm_2 (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _arm_3
     (setq _arm_3 (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _arm_4
     (setq _arm_4 (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _arm_5
     (setq _arm_5 (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _arm_6
     (setq _arm_6 (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _arm_7
     (setq _arm_7 (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _gripper_position
     (setq _gripper_position (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;;
   self)
  )

(setf (get action_server::ControlJointsGoal :md5sum-) "330b6114482d9def04dc8ca1d950eb95")
(setf (get action_server::ControlJointsGoal :datatype-) "action_server/ControlJointsGoal")
(setf (get action_server::ControlJointsGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Request part (Goal)
float64 torso_lift
float64 arm_1
float64 arm_2
float64 arm_3
float64 arm_4
float64 arm_5
float64 arm_6
float64 arm_7
float64 gripper_position  # 0.0 for open, 1.0 for close (or adjust as needed)


")



(provide :action_server/ControlJointsGoal "330b6114482d9def04dc8ca1d950eb95")


